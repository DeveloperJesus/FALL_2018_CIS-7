#include <iostream>
#include <ctime>
#include <chrono>

long long numValidation(long long x);
long long getGCD(long long x, long long y);

int main()
{
	using std::chrono::system_clock;
	char input;

	do
	{
		long long a = 0, b = 0, gcd;

		a = numValidation(a);
		b = numValidation(b);

		system_clock::time_point start = system_clock::now();
		gcd = getGCD(a, b);
		system_clock::time_point end = system_clock::now();
		double elapsedTime = double(std::chrono::duration_cast<std::chrono::nanoseconds>(end - start).count());

		std::cout << "It took " << elapsedTime << " nanoseconds to calculate the GCD of these numbers.\n";
		std::cout << "The GCD of " << a << " & " << b << " is " << gcd << ".\n\n";
		std::cout << "Would you like to run the program again? (Y)es/(N)o: ";

		std::cin >> input;
		input = toupper(input);
		std::cout << std::endl;
	} while (input != 'N');
	return 0;
}

long long numValidation(long long x)
{
	do
	{
		std::cout << "Enter a positive, non-zero integer: ";
		std::cin >> x;
		std::cout << std::endl;
	} while (x <= 0);
	return x;
}

long long getGCD(long long x, long long y)
{
	return y == 0 ? x : getGCD(y, x % y);
}
